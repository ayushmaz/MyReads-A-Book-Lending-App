{"version":3,"sources":["BooksAPI.js","Components/SearchBooks.js","Components/ListBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","SearchBooks","state","searchedList","onChangeHandle","e","_this","props","onShelfChange","target","value","onInputChange","BooksAPI","trim","length","setState","_this2","this","react_default","a","createElement","className","react_router_dom","to","type","onChange","placeholder","map","bookInShelf","find","b","undefined","key","style","width","height","backgroundImage","imageLinks","thumbnail","defaultValue","evt","disabled","title","authors","Component","ListBooks","bookList","BooksApp","currState","some","entry","_this3","react_router","exact","path","render","Components_ListBooks","filter","_ref","history","Components_SearchBooks","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8cd5c0be.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport * as BooksAPI from '../BooksAPI.js'\r\n\r\nclass SearchBooks extends Component {\r\n\r\n    state = {\r\n        searchedList: []\r\n    }\r\n\r\n\r\n    onChangeHandle = (e, book) => {\r\n        this.props.onShelfChange(e.target.value, book)\r\n    }\r\n\r\n    onInputChange = e => {\r\n        BooksAPI.search(e.target.value.trim())\r\n            .then((book) => {\r\n                ((book) && (book.length > 0) ?\r\n                    this.setState({ searchedList: book }) :\r\n                    this.setState({ searchedList: [] }))\r\n            })\r\n\r\n        \r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"search-books\">\r\n                    <div className=\"search-books-bar\">\r\n                        <Link to=\"/MyReads-A-Book-Lending-App\"><button className=\"close-search\">Close</button></Link>\r\n                        <div className=\"search-books-input-wrapper\">\r\n                            <input type=\"text\" onChange={this.onInputChange} placeholder=\"Search by title or author\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"search-books-results\">\r\n                        <ol className=\"books-grid\">\r\n                            {this.state.searchedList.map((book) => {\r\n                                \r\n                                {const bookInShelf = this.props.books.find(b => book.id === b.id);\r\n                                (bookInShelf === undefined) ? book.shelf = 'none': book.shelf = bookInShelf.shelf\r\n                                }\r\n                                return <li key={book.id}><div className=\"book\">\r\n                                    <div className=\"book-top\">\r\n                                        <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${(book.imageLinks) && book.imageLinks.thumbnail})` }}></div>\r\n                                        <div className=\"book-shelf-changer\">\r\n                                            <select defaultValue={book.shelf} onChange={(evt) => this.onChangeHandle(evt, book)}>\r\n                                                <option value=\"move\" disabled>Move to...</option>\r\n                                                <option value=\"currentlyReading\">Currently Reading</option>\r\n                                                <option value=\"wantToRead\">Want to Read</option>\r\n                                                <option value=\"read\">Read</option>\r\n                                                <option value=\"none\">None</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"book-title\">{book.title}</div>\r\n                                    <div className=\"book-authors\">{(book.authors) && book.authors}</div>\r\n                                    \r\n                                </div></li>\r\n                            })\r\n                            }\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBooks;","import React, { Component } from 'react';\r\n\r\nclass ListBooks extends Component {\r\n    render() {\r\n        return (\r\n            <ol className=\"books-grid\">\r\n                {this.props.bookList.map((book) => {\r\n                    return <li key={book.id}><div className=\"book\">\r\n                        <div className=\"book-top\">\r\n                            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.thumbnail})` }}></div>\r\n                            <div className=\"book-shelf-changer\">\r\n                                <select onChange = {(evt) => this.props.onShelfChange(evt.target.value , book)} defaultValue={book.shelf}> \r\n                                    <option value=\"move\" disabled>Move to...</option>\r\n                                    <option value=\"currentlyReading\">Currently Reading</option>\r\n                                    <option value=\"wantToRead\">Want to Read</option>\r\n                                    <option value=\"read\">Read</option>\r\n                                    <option value=\"none\">None</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"book-title\">{book.title}</div>\r\n                        <div className=\"book-authors\">{book.authors}</div>\r\n                    </div></li>\r\n                })\r\n                }\r\n            </ol>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ListBooks;","import React from 'react'\r\nimport './App.css'\r\nimport './Components/SearchBooks'\r\nimport SearchBooks from './Components/SearchBooks'\r\nimport ListBooks from './Components/ListBooks'\r\nimport { Route, Link } from 'react-router-dom'\r\nimport * as BooksAPI from './BooksAPI.js'\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    books: []\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n    BooksAPI.getAll()\r\n    .then((book)=>{\r\n      this.setState({\r\n        books : book\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  onShelfChange = (shelf, book) => { \r\n    book.shelf = shelf\r\n    BooksAPI.update(book , shelf)\r\n    .then(()=>{\r\n      this.setState((currState) => ({\r\n        books : (!this.state.books.some(entry=> entry.id === book.id))?currState.books.concat([book]).map((b) => b.id === book.id ? book : b):\r\n        currState.books.map((b) => b.id === book.id ? book : b)\r\n      }))\r\n    })\r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Route exact path=\"/MyReads-A-Book-Lending-App\" render={() => {\r\n          return <div>\r\n            <div className=\"list-books\">\r\n              <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n              </div>\r\n              <div className=\"list-books-content\">\r\n                <div>\r\n                  <div className=\"bookshelf\">\r\n                    <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n                    <div className=\"bookshelf-books\">\r\n\r\n                      <ListBooks onShelfChange={this.onShelfChange} bookList={this.state.books.filter((book)=> book.shelf === 'currentlyReading')} />\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bookshelf\">\r\n                    <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n                    <div className=\"bookshelf-books\">\r\n                      <ol className=\"books-grid\">\r\n                        <ListBooks onShelfChange={this.onShelfChange} bookList={this.state.books.filter((book)=> book.shelf === 'wantToRead')} />\r\n                      </ol>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bookshelf\">\r\n                    <h2 className=\"bookshelf-title\">Read</h2>\r\n                    <div className=\"bookshelf-books\">\r\n                      <ol className=\"books-grid\">\r\n                        <ListBooks onShelfChange={this.onShelfChange} bookList={this.state.books.filter((book)=> book.shelf === 'read')} />\r\n                      </ol>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"open-search\">\r\n                <Link to='/search'><button >Add a book</button></Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }} />\r\n        <Route exact path='/search' render={({ history }) => <SearchBooks books= {this.state.books} onShelfChange={this.onShelfChange} />} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}